@page "/questions"

@using Models
@inject NavigationManager NavigationManager
@inject MockData MockData

<h3>Questions</h3>

<button type="button" class="btn btn-primary" @onclick="CreateQuestion">Create New Question</button>

@if (questions != null && questions.Any()) {
    <table class="table">
        <thead>
            <tr>
                <th>Question</th>
                <th>Options</th>
                <th>Edit</th>
                <th>Delete</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var question in questions) {
                <tr>
                    <td>@question.PossibleQuestion</td>
                    <td>@(question.Options != null ? "Predefined" : "Free Text")</td>
                    <td><button class="btn btn-primary" @onclick="() => EditQuestion(question)">Edit</button></td>
                    <td><button class="btn btn-danger" @onclick="() => DeleteQuestion(question)">Delete</button></td>
                </tr>
            }
        </tbody>
    </table>
} else {
    <p>No questions available.</p>
}

@code {
    List<Question> questions;

    protected override async Task OnInitializedAsync() {
        questions = MockData.Instance.GetQuestions(); // MOCK DATA
    } 

    void EditQuestion(Question question) {
        NavigationManager.NavigateTo($"/editQuestion/{question.Id.ToString()}");
    }


    void DeleteQuestion(Question question) {
        MockData.DeleteQuestion(question.Id);
    }

    void CreateQuestion() {
        NavigationManager.NavigateTo($"/createNewQuestion");
    }
}