@page "/createNewQuestion"

@using Models
@using Microsoft.AspNetCore.Components
@using Components.Managers
@inject NavigationManager NavigationManager
@inject ISessionService SessionManager
@inject IData Data

@if (isAdmin) {
    <h3>CreateNewQuestion</h3>

    <div class="form-group">
        <label for="question">Question:</label>
        <input type="text" class="form-control" @bind="newQuestion.PossibleQuestion">
    </div>
    <div class="form-check">
        <input class="form-check-input" type="radio" name="optionsRadios" id="predefinedOptions" @onclick="SetPredefined">
        <label class="form-check-label" for="predefinedOptions">Predefined Options</label>
    </div>
    <div class="form-check">
        <input class="form-check-input" type="radio" name="optionsRadios" id="freeTextAnswer" @onclick="SetFreeText">
        <label class="form-check-label" for="freeTextAnswer">Free Text Answer</label>
    </div>

    @if (selectedPredefined == "on") {
        <div class="form-check">
            <input class="form-check-input" type="radio" name="multipleRadio" id="allowMultiple" @onclick="SetMultiple">
            <label class="form-check-label" for="freeTextAnswer">Allow Multiple Answers</label>
        </div>
        <div class="form-check">
            <input class="form-check-input" type="radio" name="multipleRadio" id="singleAnswer" @onclick="SetSingleAnswer">
            <label class="form-check-label" for="freeTextAnswer">Single Answer</label>
        </div>
        foreach (Option o in newOptions) {
            <div class="form-group">
                <label for="option">Option:</label>
                <input type="text" class="form-control" @bind="o.PossibleOption">
                <button type="button" class="btn btn-danger" @onclick="(e) => RemoveOption(o)">Remove Option</button>
            </div>
        }
        <div>
            <button type="button" class="btn btn-primary" @onclick="AddOption">Add Option</button>
        </div>
    }


    <div>
        <button type="button" class="btn btn-primary" @onclick="CreateNew">Create New</button>
    </div>
} else {
    <p>Not authorized</p>
}

@code {
    private Question newQuestion = new Question();
    private List<Option> newOptions = new List<Option>();
    private Option newOption = new Option();
    private string selectedPredefined;
    private string selectedFreeText;
    private string selectedMultiple;
    private string singleAnswer;
    private bool isAdmin;
    private string token;

    protected override async Task OnInitializedAsync() {
        isAdmin = SessionManager.IsAdmin();
        token = SessionManager.GetToken();
    }

    async Task CreateNew() {
        if (newQuestion.PossibleQuestion == null) {
            return;
        }

        if (selectedPredefined == "on") {
            if (selectedMultiple == "on") {
                newQuestion.IsMultiple = true;
            } else {
                newQuestion.IsMultiple = false;
            }

            newQuestion.Options = newOptions;
        }

        Data.AddQuestion(newQuestion, token); // Replace with

        // Navigate back to the original page with updated list
        NavigationManager.NavigateTo("/questions");
    }

    void RemoveOption(Option o) {
        newOptions.Remove(o);
    }

    void AddOption() {
        newOptions.Add(new Option());
    }

    void SetSingleAnswer() {
        selectedMultiple = "";
        singleAnswer = "on";
    }

    void SetMultiple() {
        selectedMultiple = "on";
        singleAnswer = "";
    }

    void SetPredefined() {
        selectedPredefined = "on";
        selectedFreeText = "";
    }

    void SetFreeText() {
        selectedFreeText = "on";
        selectedPredefined = "";
    }
}
