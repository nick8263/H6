@page "/HSEQuestionPage/"

@using Models
@using Components.Managers
@inject IData Data
@inject ISessionService SessionManager

@if (isHSE) {
    <h3>Question List</h3>

    @if (questions != null && questions.Any()) {
        <table class="table">
            <thead>
                <tr>
                    <th>Active</th>
                    <th>Question</th>
                    <th>Options</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var question in allQuestions) {
                    <tr>
                        <td>
                            @if (questions.Contains(question)) {
                                <button class="btn btn-danger" @onclick="() => RemoveQuestion(question)">Remove</button>
                            } else {
                                <button class="btn btn-primary" @onclick="() => AddQuestion(question)">Add</button>
                            }
                        </td>
                        <td>@question.PossibleQuestion</td>
                        <td>@(question.Options != null ? "Predefined" : "Free Text")</td>
                    </tr>
                }
            </tbody>
        </table>
    } else {
        <p>No questions available.</p>
    }
} else {
    <p>Not authorized</p>
}

@code {
    private List<Question> questions;
    private List<Question> allQuestions;
    private bool isHSE;
    private string token;

    protected override async Task OnInitializedAsync() {
        token = SessionManager.GetToken();
        questions = SessionManager.GetQuestionGroup().Questions;
        allQuestions = await Data.GetQuestions(token);
        isHSE = SessionManager.IsHSEAdmin();
    }

    void AddQuestion(Question question) {
        questions.Add(question);
    }

    void RemoveQuestion(Question question) {
        questions.Remove(question);
    }
}

